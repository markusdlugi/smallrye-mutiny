---
name: Post release work
on:
  push:
    branches:
      - "!*"
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

jobs:
  post-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: maven-11
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.ref }}
          token: ${{ secrets.GITHUB_API_TOKEN }}
      - name: Install JDK 11
        uses: AdoptOpenJDK/install-jdk@v1
        with:
          version: 11
      - name: 'Collect Compatibility Justification'
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_API_TOKEN }}
          SECRET_FILES_PASSPHRASE: ${{ secrets.SECRET_FILES_PASSPHRASE }}
        run: |
          sudo apt-get update -o Dir::Etc::sourcelist="sources.list" \
            -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"
          sudo apt-get install -y gnupg2 gnupg-agent

          curl -s "https://get.sdkman.io" | bash
          source ~/.sdkman/bin/sdkman-init.sh && \
            sdk install jbang

          mkdir -p target
          jbang .build/CompatibilityUtils.java extract
      - name: 'Post-Release Tasks'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_API_TOKEN }}
          REF: ${{ github.event.ref }}
        run: |
          TAG=$(echo ${REF} | sed -e 's%refs/tags/%%g')
          source ~/.sdkman/bin/sdkman-init.sh && \
          jbang .build/PostRelease.java --release-version=${TAG} --token=${GITHUB_TOKEN}
      - name: 'Clear compatibility justifications'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_API_TOKEN }}
          REF: ${{ github.event.ref }}
        run: |
          source ~/.sdkman/bin/sdkman-init.sh

          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "smallrye@googlegroups.com"

          TAG=$(echo ${REF} | sed -e 's%refs/tags/%%g')
          echo "Waiting for artifacts to be available from Maven Central, otherwise the build will fail during the compatibility verification"
          jbang .build/WaitForCentral.java \
            --artifacts=io.smallrye.reactive:mutiny,io.smallrye.reactive:mutiny-smallrye-context-propagation,io.smallrye.reactive:mutiny-test-utils,io.smallrye.reactive:mutiny-kotlin,io.smallrye.reactive:mutiny-reactor,io.smallrye.reactive:mutiny-rxjava \
            --expected-version="${TAG}"

          git clone -b main "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/smallrye/smallrye-mutiny.git" new-main
          cd new-main
          echo "Clearing difference justifications"
          jbang .build/CompatibilityUtils.java clear
          if [[ $(git diff --stat) != '' ]]; then
            git add -A
            git status
            git commit -m "[POST-RELEASE] - Clearing breaking change justifications"
            git push origin main
          else
            echo "No justifications cleared"
          fi
